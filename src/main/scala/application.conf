akka{

    experiment{
       days=2
    }

    grid{
       width=100
       height=100
    }

    geo{
        by_geo=false
        fileName=USA-Seattle_cells.csv
        #must match grid.width
        width=100
        #must match grid.height
        height=100
        minAttractions=3
        maxAttractions=15
        ob_wide=9
        ob_diameter=7
    }

    #if geo.by_geo=true - all those attractions do not apply
    attractions{
       location=["1,4","12,40","66,88","77,91","13,43", "77,22","15,14", "45,76", "78,99", "65,92", "3,33", "71,23", "4,22", "5,26", "89,14", "5,83", "59,68"]
       #percentage of locations that will be added from the specified above
       probabilityToAddTheLocationToUe=15
    }

    #if geo.by_geo=true - all those obstacles do not apply
    obstacles{
       location=["4,5","77,16","55,55","45,45","12,13","3,56","22,13","74,53","13,57"]
    }

    ue{
       profiles=2
    }

    fluctuations{

        # fluctuations made of additional obstacles (banal shortest path changes, if some obstacle put on the path)
        applyObstacleBasedFluctuations=true
        maxPercentagePathsToFluctuate=10
        maxObstaclesPerPath=2
        maxObstacleWidth=2

        # fluctuations made of lucrative distances (when some grid areas marked as lucrative. path may go the other way)
        applyWalkAroundFluctuations=false
        maxLightWeightHorizontalStretchesProbabilityInARaw=15
        maxLightWeightHorizontalStretchesLength=2
        maxLightWeightVertexValue=90

    }

    time{
        #first day starts at this time
        start="2020-01-23T06:00:00.000+0000"
        dailyStartUeFluctuationMinutes=30
        roundTripHoursMin=6
        roundTripHours=12
        cellTimeTypesCrossingCellSec=[10, 60, 120, 300] #car, bike, walk, crawl
        cellTimeTypesCrossingCellSecRandomPercent=10
        mixTransportBetweenDays=false
    }

    output{
        #oneFile=true works only for usual grid (not the Seattle grid)
        oneFile=false
        file="output.csv"
    }

}